name: "install-tanzu-data-services-repo-dispatch"

on:
  workflow_dispatch:
    inputs:
      tds-version:
        description: "Tanzu Data Services Package Repository version"
        type: string
        required: true
        default: "1.5.0"
      cluster-provider:
        description: "The Kubernetes service provider"
        required: true
        type: choice
        options:
          - eks
          - aks
          - gke
          - tkg»aws
          - tkg»azure
          - other
      kubeconfig-contents:
        description: "The base64 encoded contents of a .kube/config file that already has the current Kubernetes cluster context set"
        required: true

jobs:
  install-tanzu-data-services-repo:
    if: contains(fromJson('["eks","gke"]'), inputs.cluster-provider) != true
    uses: ./.github/workflows/install-tanzu-data-services-repo.yml
    with:
      tds-version: ${{ github.event.inputs.tds-version }}
      cluster-provider: ${{ github.event.inputs.cluster-provider }}
    secrets:
      TANZU_NETWORK_API_TOKEN: ${{ secrets.TANZU_NETWORK_API_TOKEN }}
      TANZU_NETWORK_USERNAME: ${{ secrets.TANZU_NETWORK_USERNAME }}
      TANZU_NETWORK_PASSWORD: ${{ secrets.TANZU_NETWORK_PASSWORD }}
      CSP_API_TOKEN: ${{ secrets.CSP_API_TOKEN }}
      GIT_SSH_PRIVATE_KEY: ${{ secrets.GIT_SSH_PRIVATE_KEY }}
      GIT_SSH_KNOWN_HOSTS: ${{ secrets.GIT_SSH_KNOWN_HOSTS }}
      KUBECONFIG_CONTENTS: ${{ github.event.inputs.kubeconfig-contents }}

  install-tanzu-data-services-repo-on-eks:
    if: github.event.inputs.cluster-provider == 'eks'
    uses: ./.github/workflows/install-tanzu-data-services-repo.yml
    with:
      tds-version: ${{ github.event.inputs.tds-version }}
      cluster-provider: ${{ github.event.inputs.cluster-provider }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      TANZU_NETWORK_API_TOKEN: ${{ secrets.TANZU_NETWORK_API_TOKEN }}
      TANZU_NETWORK_USERNAME: ${{ secrets.TANZU_NETWORK_USERNAME }}
      TANZU_NETWORK_PASSWORD: ${{ secrets.TANZU_NETWORK_PASSWORD }}
      CSP_API_TOKEN: ${{ secrets.CSP_API_TOKEN }}
      GIT_SSH_PRIVATE_KEY: ${{ secrets.GIT_SSH_PRIVATE_KEY }}
      GIT_SSH_KNOWN_HOSTS: ${{ secrets.GIT_SSH_KNOWN_HOSTS }}
      KUBECONFIG_CONTENTS: ${{ github.event.inputs.kubeconfig-contents }}

  install-tanzu-data-services-repo-on-gke:
    if: github.event.inputs.cluster-provider == 'gke'
    uses: ./.github/workflows/install-tanzu-data-services-repo.yml
    with:
      tds-version: ${{ github.event.inputs.tds-version }}
      cluster-provider: ${{ github.event.inputs.cluster-provider }}
    secrets:
      GOOGLE_PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
      GOOGLE_SERVICE_ACCOUNT_KEY: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}
      TANZU_NETWORK_API_TOKEN: ${{ secrets.TANZU_NETWORK_API_TOKEN }}
      TANZU_NETWORK_USERNAME: ${{ secrets.TANZU_NETWORK_USERNAME }}
      TANZU_NETWORK_PASSWORD: ${{ secrets.TANZU_NETWORK_PASSWORD }}
      CSP_API_TOKEN: ${{ secrets.CSP_API_TOKEN }}
      GIT_SSH_PRIVATE_KEY: ${{ secrets.GIT_SSH_PRIVATE_KEY }}
      GIT_SSH_KNOWN_HOSTS: ${{ secrets.GIT_SSH_KNOWN_HOSTS }}
      KUBECONFIG_CONTENTS: ${{ github.event.inputs.kubeconfig-contents }}