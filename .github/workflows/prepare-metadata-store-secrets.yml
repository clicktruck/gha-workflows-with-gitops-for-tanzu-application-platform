name: "prepare-metadata-store-secrets"

on:
  workflow_call:
    inputs:
      cluster-provider:
        description: "The Kubernetes service provider"
        type: string
        required: true
    secrets:
      GOOGLE_PROJECT_ID:
        required: false
      GOOGLE_SERVICE_ACCOUNT_KEY:
        required: false
      AWS_ACCESS_KEY_ID:
        required: false
      AWS_SECRET_ACCESS_KEY:
        required: false
      AWS_SESSION_TOKEN:
        required: false
      CSP_API_TOKEN:
        required: true
      TAP_BUILD_KUBECONFIG_CONTENTS:
        required: true
      TAP_VIEW_KUBECONFIG_CONTENTS:
        required: true

jobs:
  encode-prepare-metadata-store-secrets-script:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    outputs:
      result: ${{ steps.encode.outputs.result }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Encode
      id: encode
      run: |
        result="$(cat "scripts/prepare-metadata-store-secrets.sh" | base64 -w 0)"
        echo "result=${result}" >> $GITHUB_OUTPUT

  prepare:
    needs: encode-prepare-metadata-store-secrets-script
    runs-on: ubuntu-20.04

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    - name: "Prepare metadata-store secrets"
      if: contains(fromJson('["aks","other"]'), inputs.cluster-provider)
      uses: ./docker/actions/tanzu-runsh-setup-action
      with:
        script-contents: ${{ needs.encode-prepare-metadata-store-secrets-script.outputs.result }}
        script-arguments: ${{ secrets.TAP_VIEW_KUBECONFIG_CONTENTS }} ${{ TAP_BUILD_KUBECONFIG_CONTENTS }}
        csp-api-token: ${{ secrets.CSP_API_TOKEN }}

    - name: "Prepare metadata-store secrets on EKS"
      if: inputs.cluster-provider == 'eks'
      uses: ./docker/actions/aws/tanzu-runsh-setup-action
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        script-contents: ${{ needs.encode-prepare-metadata-store-secrets-script.outputs.result }}
        script-arguments: ${{ secrets.TAP_VIEW_KUBECONFIG_CONTENTS }} ${{ TAP_BUILD_KUBECONFIG_CONTENTS }}
        csp-api-token: ${{ secrets.CSP_API_TOKEN }}

    - name: "Prepare metadata-store secrets on GKE"
      if: inputs.cluster-provider == 'gke'
      uses: ./docker/actions/google/tanzu-runsh-setup-action
      with:
        google-project-id: ${{ secrets.GOOGLE_PROJECT_ID }}
        google-service-account-key: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}
        script-contents: ${{ needs.encode-prepare-metadata-store-secrets-script.outputs.result }}
        script-arguments: ${{ secrets.TAP_VIEW_KUBECONFIG_CONTENTS }} ${{ TAP_BUILD_KUBECONFIG_CONTENTS }}
        csp-api-token: ${{ secrets.CSP_API_TOKEN }}
