#@ load("@ytt:data", "data")
#@ load("@ytt:base64", "base64")
---
apiVersion: v1
data:
  secret-access-key: #@ base64.encode(data.values.aws.credentials.secretKey)
kind: Secret
metadata:
  name: prod-route53-credentials-secret
  namespace: cert-manager
  annotations:
    kapp.k14s.io/change-group: "cert-manager-route53-credentials"
    kapp.k14s.io/change-rule.create-order: "upsert after upserting cert-manager"
    kapp.k14s.io/change-rule.delete-order: "delete before deleting cert-manager"
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-contour-cluster-issuer
  annotations:
    kapp.k14s.io/change-rule.create-order: "upsert after upserting cert-manager-route53-credentials"
    kapp.k14s.io/change-rule.delete-order: "delete before deleting cert-manager-route53-credentials"
spec:
  acme:
    email: #@ data.values.acme.email
    privateKeySecretRef:
      name: letsencrypt-prod
    server: https://acme-v02.api.letsencrypt.org/directory
    solvers:
      - selector:
          dnsZones:
            - #@ data.values.ingress.domain
        dns01:
          route53:
            region: #@ data.values.aws.region
            hostedZoneID: #@ data.values.aws.route53.hosted_zone_id
            accessKeyID: #@ data.values.aws.credentials.accessKey
            secretAccessKeySecretRef:
              name: prod-route53-credentials-secret
              key: secret-access-key
