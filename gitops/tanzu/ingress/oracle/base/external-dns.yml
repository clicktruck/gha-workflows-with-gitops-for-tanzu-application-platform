#@ load("@ytt:data", "data")
#@ load("@ytt:base64", "base64")
#@ load("@ytt:yaml", "yaml")
---
apiVersion: packaging.carvel.dev/v1alpha1
kind: PackageInstall
metadata:
  name: external-dns
  namespace: tanzu-user-managed-packages
  annotations:
    kapp.k14s.io/change-group: "external-dns"
    kapp.k14s.io/change-rule.create-order: "upsert after upserting external-dns-packageinstall-setup"
    kapp.k14s.io/change-rule.delete-order: "delete before deleting external-dns-packageinstall-setup"
spec:
  packageRef:
    refName: external-dns.tanzu.vmware.com
    versionSelection:
      constraints: 0.12.2+vmware.5-tkg.1
  serviceAccountName: ingress-sa
  values:
  - secretRef:
      name: external-dns-tanzu-user-managed-packages-values
---
#@ def extdns_config():
#! Namespace in which to deploy ExternalDNS.
namespace: tanzu-system-service-discovery

#! Deployment-related configuration.
deployment:
  args:
    - --source=service
    - --source=ingress
    - --source=contour-httpproxy
    - #@ "--domain-filter=" + str(data.values.ingress.domain)
    - --policy=upsert-only
    - --registry=txt
    - --txt-owner-id=external-dns
    - --txt-prefix=txt
    - --provider=oci
  securityContext: {}
  volumeMounts:
  - mountPath: /etc/kubernetes/
    name: config
    readOnly: true
  volumes:
  - name: config
    secret:
      secretName: external-dns-admin-credentials
#@ end
---
apiVersion: v1
kind: Secret
metadata:
  name: external-dns-tanzu-user-managed-packages-values
  namespace: tanzu-user-managed-packages
  annotations:
    kapp.k14s.io/change-group: "external-dns-packageinstall-setup"
    kapp.k14s.io/change-rule.create-order: "upsert after upserting external-dns-clouddns-credentials"
    kapp.k14s.io/change-rule.delete-order: "delete before deleting external-dns-clouddns-credentials"
stringData:
  external-dns-data-values.yaml: #@ yaml.encode(extdns_config())
---
#@ def secret_config():
auth:
  region: #@ data.values.oracle.region
  tenancy: #@ data.values.oracle.credentials.tenancy
  user: #@ data.values.oracle.credentials.user
  key: #@ base64.decode(data.values.oracle.credentials.key)
  fingerprint: #@ data.values.oracle.credentials.fingerprint
compartment: #@ data.values.oracle.compartment
#@ end
---
apiVersion: v1
kind: Secret
metadata:
  name: external-dns-admin-credentials
  namespace: tanzu-system-service-discovery
  annotations:
    kapp.k14s.io/change-group: "external-dns-clouddns-credentials"
    kapp.k14s.io/change-rule.create-order: "upsert after upserting external-dns-ns"
    kapp.k14s.io/change-rule.delete-order: "delete before deleting external-dns-ns"
stringData:
  oci.yaml: #@ yaml.encode(secret_config())
