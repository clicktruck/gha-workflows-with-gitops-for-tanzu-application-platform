#@ load("@ytt:data", "data")
#@ load("@ytt:yaml", "yaml")
---
#@ if (data.values.tap.cluster.provider == "eks" or data.values.tap.cluster.provider == "tkgÂ»aws") and (data.values.tap.credentials.registry.host).find(".dkr.ecr.") > -1:
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: create-workload-ecr-repos
spec:
  background: false
  rules:
  - name: create-workload-ecr-repos
    match:
      any:
      - resources:
          kinds:
          - Workload
    generate:
      kind: WorkloadECRRepo
      apiVersion: tap.vrabbi.cloud/v1alpha1
      name: "{{request.object.metadata.name}}-ecr-repos"
      namespace: "{{request.namespace}}"
      synchronize: false
      data:
        metadata:
          ownerReferences:
          - apiVersion: carto.run/v1alpha1
            kind: Workload
            name: "{{request.object.metadata.name}}"
            uid: "{{request.object.metadata.uid}}"
        spec:
          parameters:
            workloadName: "{{request.object.metadata.name}}"
            #! The split function is used to acquire the AWS region from the ECR hostname
            #! ECR hostnames look like {aws_account_id}.dkr.ecr.{aws_region}.amazonaws.com
            region: #@ (data.values.tap.credentials.registry.host).split(".")[3]
            repoPrefix: tap-build-service/workloads
            providerName: default
#@ end