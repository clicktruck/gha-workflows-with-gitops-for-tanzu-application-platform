#@ load("@ytt:data", "data")
---
apiVersion: v1
kind: Secret
metadata:
  name: honor-deliverable-subpath-overlay
  namespace: #@ data.values.tap.namespace
  annotations:
    kapp.k14s.io/change-group: tap/package-overlays
stringData:
  honor-deliverable-subpath-overlay.yaml: |
    #! Hack: Get rid of the .git suffix on the gitops repo
    #! Source was kubectl get ClusterDeploymentTemplate app-deploy -oyaml
    #@ load("@ytt:overlay", "overlay")
    #@overlay/match by=overlay.subset({"kind":"ClusterDeploymentTemplate", "metadata": {"name":"app-deploy"}}),expects="1+"
    ---
    #@overlay/match missing_ok=True
    metadata:
      #@overlay/match missing_ok=True
      annotations:
        #@overlay/match missing_ok=True
        tampered-by: tap-lab-gitops
    spec:
      #@overlay/match missing_ok=True
      ytt: |
        #@ load("@ytt:data", "data")
        #@ load("@ytt:assert", "assert")

        #@ def merge_labels(fixed_values):
        #@   labels = {}
        #@   if hasattr(data.values.deliverable.metadata, "labels"):
        #@     labels.update(data.values.deliverable.metadata.labels)
        #@   end
        #@   labels.update(fixed_values)
        #@   return labels
        #@ end

        ---
        apiVersion: kappctrl.k14s.io/v1alpha1
        kind: App
        metadata:
          name: #@ data.values.deliverable.metadata.name
          labels: #@ merge_labels({ "app.kubernetes.io/component": "deploy" })
        spec:
          syncPeriod: 10m0s
          serviceAccountName: #@ data.values.params.serviceAccount
          fetch:
            - http:
                url: #@ data.values.deployment.url or assert.fail("missing required deployment config url")
                #! HACK: Replace the following 2 lines with the ones below it
                #! #@ if/end hasattr(data.values.params, "gitops_sub_path"):
                #! subPath: #@ data.values.params.gitops_sub_path
                #@ if/end hasattr(data.values.deliverable.spec.source, "subPath"):
                subPath: #@ data.values.deliverable.spec.source.subPath

            - inline:
                paths:
                  config.yml: |
                    ---
                    apiVersion: kapp.k14s.io/v1alpha1
                    kind: Config
                    rebaseRules:
                      - path: [metadata, annotations, serving.knative.dev/creator]
                        type: copy
                        sources: [new, existing]
                        resourceMatchers: &matchers
                          - apiVersionKindMatcher: {apiVersion: serving.knative.dev/v1, kind: Service}
                      - path: [metadata, annotations, serving.knative.dev/lastModifier]
                        type: copy
                        sources: [new, existing]
                        resourceMatchers: *matchers
          template:
            - ytt: {}
            - kbld: {}
          deploy:
            - kapp: {}
