#@ load("@ytt:data", "data")
#@ load("@ytt:yaml", "yaml")
---
#@ if (data.values.tap.cluster.provider == "eks" || data.values.tap.cluster.provider == "tkgÂ»aws") && (data.values.tap.credentials.registry.host).find(".dkr.ecr.") > -1:
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: workloadecrrepo
  labels:
    crossplane.io/xrd: xworkloadecrrepos.tap.vrabbi.cloud
    provider: aws
spec:
  writeConnectionSecretsToNamespace: crossplane-system
  compositeTypeRef:
    apiVersion: tap.vrabbi.cloud/v1alpha1
    kind: XWorkloadECRRepo
  resources:
  - name: imagerepo
    base:
      apiVersion: ecr.aws.crossplane.io/v1beta1
      kind: Repository
      spec:
        forProvider:
          forceDelete: true
    patches:
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: "spec.parameters.repoPrefix"
        - fromFieldPath: "spec.parameters.workloadName"
        - fromFieldPath: "spec.claimRef.namespace"
        strategy: string
        string:
          fmt: "%s/%s-%s"
      toFieldPath: "metadata.annotations[crossplane.io/external-name]"
      policy:
        fromFieldPath: Required
    - type: FromCompositeFieldPath
      fromFieldPath: "spec.parameters.region"
      toFieldPath: "spec.forProvider.region"
    - type: FromCompositeFieldPath
      fromFieldPath: "spec.parameters.region"
      toFieldPath: "metadata.labels[region]"
    - type: FromCompositeFieldPath
      fromFieldPath: "spec.parameters.providerName"
      toFieldPath: "spec.providerConfigRef.name"
  - name: bundlerepo
    base:
      apiVersion: ecr.aws.crossplane.io/v1beta1
      kind: Repository
      spec:
        forProvider:
          forceDelete: true
    patches:
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: "spec.parameters.repoPrefix"
        - fromFieldPath: "spec.parameters.workloadName"
        - fromFieldPath: "spec.claimRef.namespace"
        strategy: string
        string:
          fmt: "%s/%s-%s-bundle"
      toFieldPath: "metadata.annotations[crossplane.io/external-name]"
    - type: FromCompositeFieldPath
      fromFieldPath: "spec.parameters.region"
      toFieldPath: "spec.forProvider.region"
    - type: FromCompositeFieldPath
      fromFieldPath: "spec.parameters.region"
      toFieldPath: "metadata.labels[region]"
    - type: FromCompositeFieldPath
      fromFieldPath: "spec.parameters.providerName"
      toFieldPath: "spec.providerConfigRef.name"
#@ end